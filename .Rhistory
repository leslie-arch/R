arg_list
yaml.load("- hey\n- hi\n- hello")
yaml.load("- hey\n- hi\n- hello")
help(R6)
help(list.append)
help(append)
a <- c(x = 4, y = 5)
b <- c(z = 6)
c <- append(a, b)
c
ls()
annotations <- fromJSON(file = "./data/coco-2017/annotations/captions_train2017.json")
library(rjson)
annotations <- fromJSON(file = "./data/coco-2017/annotations/captions_train2017.json")
length(annotations$annotations)
annotations$annotations[[1]]
names(annotations)
rnorm(5)
enumerate(rnorm(5))
library(itertools)
enumerate(norm(5))
library(itertools)
library(itertools)
as.list(enumerate(rnorm(5)))
install.packages('reticulate')
py_available()
use_condaenv("~/.local/share/r-miniconda")
py_available()
use_condaenv("/home/leslie/.local/share/r-miniconda/envs/r-reticulate")
py_available()
use_condaenv("/home/leslie/.conda")
py_available()
use_python("/usr/bin/python3")
py_available()
use_python("/usr/bin/")
py_available()
use_condaenv("r-reticulate")
py_available()
use_python("/usr/local/bin/python")
py_available()
py_available()
py_available()
py_available()
py_available()
path.package('reticulate')
use_python('/usr/bin/python3.6')
py_available()
py_discover_config()
debug(py_available)
py_available(initialize = TRUE)
q
q()
help
n
n
n
Q
Q
use_condaenv("py36")
py_available()
n
Q
ls()
help(rm)
annotations$annotations[[1]]
names(annotations)
length(annotations$images)
annotations$images[[1]]
annotations$info
annotations$annotations[[1]]
image_info <- fromJSON(file = './data/coco-2017/annotations/image_info_test-dev2017.json')
names(image_info)
image_info$images[[1]]
image_info$images[[2]]
image_info$categories[[1]]
instances <- fromJSON(file = "./data/coco-2017/annotations/instances_train2017.json")
names(instances)
length(instances$annotations)
instances$annotations[[1]]
instances$categories[[58]]
image_path <- "./data/coco-2017/train2017"
image_path
library(imager)
install.packages(imager)
library(imager)
install.packages('imager')
library(imager)
image_path
instances$annotations[[1]]
instances$annotations[[1]]$image_id
format(instances$annotations[[1]]$image_id, )
format(instances$annotations[[1]]$image_id, 12, justify = "left")
format(instances$annotations[[1]]$image_id, 12, justify = "right")
format(instances$annotations[[1]]$image_id, 12)
format(instances$annotations[[1]]$image_id, digits = 12)
help(sprintf)
sprintf("%s/%012.jpg", image_path, instances$annotations[[1]]$image_id)
sprintf("%s/%012s.jpg", image_path, instances$annotations[[1]]$image_id)
sprintf("%s/%012s.jpg", image_path, instances$annotations[[1]]$image_id)
sprintf("%s/%012d.jpg", image_path, instances$annotations[[1]]$image_id)
image_file <- sprintf("%s/%012d.jpg", image_path, instances$annotations[[1]]$image_id)
image_file
image <- load.image(image_file)
plot(image)
plot(image)
plot(image)
plot(image)
Sys.setenv(DISPLAY = "172.17.0.1:0")
Sys.getenv("DISPLAY")
plot(image)
q()
n
fromJSON('./data/coco-2017/annotations/instances_train2017.json')
fromJSON('data/coco-2017/annotations/instances_train2017.json')
fromJSON(file = 'data/coco-2017/annotations/instances_train2017.json')
type(image)
typeof(image)
class(image)
image
help(geom_rect)
ggplot2(image)
ggplot(image)
ls("package")
(.packages())
library("tidyverse")
ggplot(image)
ggplot2(images)
ggplot(image)
class(image)
help(load.image)
as.data.frame(image)
ggplot(as.data.frame(image))
ggplot(as.data.frame(image, wide="c"))
image_data <- as.data.frame(image, wide="d")
typeof(image_data)
head(image_data)
display(image)
help(plot)
image$x
names(image)
typeof(image)
install.packages('magick')
install.packages('magick')
install.packages('magick')
detach
detach('imager')
help(detach)
deteach
detach(package:imager)
ls()
rm(image)
rm(image_data)
install.packages('opencv')
library(opencv)
help(package:opencv)
help('package:opencv')
help(load.image)
type(image)
typeof(image)
names(image)
class(image)
ocv_display(image)
ocv_display(image)
help(ocv_display)
help(ocv_picture)
ls(package=opencv)
ls(package:opencv)
pil_image <- tf$image_load(path = full_path)
imge_load(full_path)
tf$keras$image_load(full_path)
help(package:tensorflow)
help('package:tensorflow')
tf$keras$preprocessing$image$image_load(full_path)
tf$
help(tensorflow)
library(kears)
library(keras)
pil_image <- image_load(full_path)
use_condaenv(py36)
use_condaenv('py36')
pil_image <- image_load(full_path)
pil_image <- image_load(full_path)
q()
n
use_condaenv('py36')
use_condaenv('py36')
help(use_condaenv)
library(reticulate)
use_condaenv('py36')
library(keras)
library(rjson)
image <- image_load(full_path)
reticulate::py_config()
reticulate::conda_list()
reticulate::use_condaenv('py36')
image <- image_load(full_path)
reticulate::conda_install('pillow')
help(reticulate::conda_install)
reticulate::conda_install('py36', "pillow")
image <- image_load(full_path)
reticulate::conda_list()
reticulate::conda_binary()
image <- image_load(full_path)
reticulate::conda_version()
sessionInfo()
install_tensorflow(method="conda", version="gpu")
library(tensorflow)
install_tensorflow(method="conda", version="gpu")
help(use_condaenv)
help(use_condaenv)
help(use_condaenv)
help(use_condaenv)
use_python('/usr/local/bin/python')
reticular::python_config()
(.packages())
reticulate::py_config()
detach(package=reticulate)
detach(package:reticulate)
(.packages())
py_config()
image_load(full_path)
image_load(full_path)
image_load(full_path)
sessionInfo()
quit()
n
